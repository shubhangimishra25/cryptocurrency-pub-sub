{"ast":null,"code":"var _jsxFileName = \"/Users/shubhangimishra/Desktop/docker/33_50373871_p12/frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport TopicInput from './components/songs/TopicInput';\nimport PublishTopic from './components/songs/PublishTopic';\nimport LoginScreen from './components/LoginScreen/LoginScreen';\nimport ErrorAlert from './components/UI/ErrorAlert';\nimport SuccessAlert from './components/UI/Success';\nimport SubscribedTopic from './components/songs/SubscribedTopic';\n\nfunction App() {\n  const [user, setEnteredUser] = useState({\n    email: \"\",\n    pwd: \"\"\n  });\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [topicsSubscribed, setTopicsSubscribed] = useState([]);\n  var topicsSubscribe = [];\n\n  async function addTopicHandler(userid, topicText) {\n    try {\n      const response = await fetch('http://localhost/topics', {\n        method: 'POST',\n        body: JSON.stringify({\n          userid: userid,\n          topic: topicText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Subscribing the topic failed.');\n      } else {\n        setSuccess('Successfully subscribed to Topic');\n        console.log('successfluyy subscribe');\n      }\n\n      setTimeout(() => {\n        setError(null);\n      }, 100);\n    } catch (err) {\n      setError(err.message || 'Adding a topic failed - the server responsed with an error.');\n    }\n  }\n\n  async function Login(details) {\n    try {\n      console.log(details);\n      const response = await fetch('http://localhost/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: details.username,\n          password: details.password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Invalid Details.');\n      } else {\n        setEnteredUser({\n          email: details.username,\n          pwd: details.password\n        });\n\n        try {\n          const response = await fetch('http://localhost/filtertopic/' + details.username, {\n            method: 'GET'\n          });\n          console.log(response);\n          response.json().then(function (result) {\n            topicsSubscribe.splice(0, topicsSubscribe.length);\n            result.forEach(element => {\n              console.log(element);\n              topicsSubscribe.push(element);\n              console.log('topicsssss' + topicsSubscribed);\n            }); // \"Some details token\"\n\n            setTopicsSubscribed(topicsSubscribe);\n          });\n        } catch (err) {\n          setError(err.message || 'Subscribing a topic failed - the server responsed with an error.');\n        }\n      }\n    } catch (err) {\n      setError(err.message || 'Subscribing a topic failed - the server responsed with an error.');\n    }\n  }\n\n  async function subscribeData(user) {\n    try {\n      const response = await fetch('http://localhost/filtertopic/' + user, {\n        method: 'GET'\n      });\n      console.log(response);\n      response.json().then(function (result) {\n        topicsSubscribe.splice(0, topicsSubscribe.length);\n        result.forEach(element => {\n          console.log(element);\n          topicsSubscribe.push(element);\n          console.log('topicsssss' + topicsSubscribed);\n        }); // \"Some User token\"\n\n        setTopicsSubscribed(topicsSubscribe);\n      });\n    } catch (err) {\n      setError(err.message || 'Subscribing a topic failed - the server responsed with an error.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorAlert, {\n    errorText: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), success && /*#__PURE__*/React.createElement(SuccessAlert, {\n    successText: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }), user.email === '' ? /*#__PURE__*/React.createElement(LoginScreen, {\n    Login: Login,\n    e: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 10\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopicInput, {\n    onAddTopic: addTopicHandler,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"topic\",\n    name: \"topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Subscribe \"), /*#__PURE__*/React.createElement(PublishTopic, {\n    onPublishTopic: subscribeData,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(SubscribedTopic, {\n    user: topicsSubscribed.map(home => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 50\n      }\n    }, home.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"Symbol\", home.symbol), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"PriceUSD\", home.priceUsd), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"PriceBTC\", home.priceBtc), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"percentChange24hUsd\", home.percentChange24hUsd), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"LastUpdated\", home.lastUpdated))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 8\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shubhangimishra/Desktop/docker/33_50373871_p12/frontend/src/App.js"],"names":["React","useState","TopicInput","PublishTopic","LoginScreen","ErrorAlert","SuccessAlert","SubscribedTopic","App","user","setEnteredUser","email","pwd","error","setError","success","setSuccess","topicsSubscribed","setTopicsSubscribed","topicsSubscribe","addTopicHandler","userid","topicText","response","fetch","method","body","JSON","stringify","topic","headers","resData","json","ok","Error","message","console","log","setTimeout","err","Login","details","username","password","then","result","splice","length","forEach","element","push","subscribeData","map","home","name","symbol","priceUsd","priceBtc","percentChange24hUsd","lastUpdated"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport TopicInput from './components/songs/TopicInput';\nimport PublishTopic from './components/songs/PublishTopic';\nimport LoginScreen from './components/LoginScreen/LoginScreen'\nimport ErrorAlert from './components/UI/ErrorAlert';\nimport SuccessAlert from './components/UI/Success';\nimport SubscribedTopic from './components/songs/SubscribedTopic'\n\nfunction App() {\n\n\n  const [user, setEnteredUser] = useState({ email: \"\", pwd: \"\" });\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [topicsSubscribed, setTopicsSubscribed] = useState([]);\n\n  var topicsSubscribe = []\n\n  async function addTopicHandler(userid, topicText) {\n\n\n    try {\n      const response = await fetch('http://localhost/topics', {\n        method: 'POST',\n        body: JSON.stringify({\n          userid: userid,\n          topic: topicText,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Subscribing the topic failed.');\n      }\n      else {\n        setSuccess('Successfully subscribed to Topic')\n        console.log('successfluyy subscribe')\n\n\n      }\n      setTimeout(() => {\n        setError(null)\n      }, 100);\n\n\n    } catch (err) {\n      setError(\n        err.message ||\n        'Adding a topic failed - the server responsed with an error.'\n      );\n    }\n\n  }\n  async function Login(details) {\n\n    try {\n      console.log(details)\n      const response = await fetch('http://localhost/login',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            username: details.username,\n            password: details.password,\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      const resData = await response.json();\n      if (!response.ok) {\n        throw new Error(resData.message || 'Invalid Details.');\n      }\n      else {\n        setEnteredUser({\n          email: details.username,\n          pwd: details.password\n        })\n        try {\n\n          const response = await\n            fetch('http://localhost/filtertopic/' + details.username,\n              {\n                method: 'GET',\n              });\n          console.log(response)\n\n          response.json().then(function (result) {\n\n            topicsSubscribe.splice(0, topicsSubscribe.length)\n            result.forEach(element => {\n              console.log(element)\n\n              topicsSubscribe.push(element)\n\n\n              console.log('topicsssss' + topicsSubscribed)\n            })// \"Some details token\"\n            setTopicsSubscribed(topicsSubscribe)\n          })\n\n\n\n\n\n\n        } catch (err) {\n          setError(\n            err.message ||\n            'Subscribing a topic failed - the server responsed with an error.'\n          );\n        }\n      }\n\n    }\n    catch (err) {\n      setError(\n        err.message ||\n        'Subscribing a topic failed - the server responsed with an error.'\n      );\n    }\n\n  }\n  async function subscribeData(user) {\n    try {\n\n      const response = await\n        fetch('http://localhost/filtertopic/' + user,\n          {\n            method: 'GET',\n          });\n      console.log(response)\n\n      response.json().then(function (result) {\n\n        topicsSubscribe.splice(0, topicsSubscribe.length)\n        result.forEach(element => {\n          console.log(element)\n\n          topicsSubscribe.push(element)\n\n\n          console.log('topicsssss' + topicsSubscribed)\n        })// \"Some User token\"\n        setTopicsSubscribed(topicsSubscribe)\n      })\n\n\n\n\n\n\n    } catch (err) {\n      setError(\n        err.message ||\n        'Subscribing a topic failed - the server responsed with an error.'\n      );\n    }\n  }\n\n\n  return (\n\n    <main className=\"App\">\n      {error && <ErrorAlert errorText={error} />}\n      {success && <SuccessAlert successText={success} />}\n      {(user.email === '') ?\n        (<LoginScreen Login={Login} e={error} />)\n        :\n        (\n          <><TopicInput onAddTopic={addTopicHandler} user={user}\n           />\n          <button type='submit' id=\"topic\" name=\"topic\">Subscribe </button>\n\n\n<PublishTopic onPublishTopic={subscribeData} user={user} />\n       <SubscribedTopic \n            user={topicsSubscribed.map(home => <><div>{home.name}</div>\n              <div>Symbol\n                {home.symbol}</div>\n              <div>PriceUSD{home.priceUsd}</div>\n              <div>PriceBTC{home.priceBtc}</div>\n              <div>percentChange24hUsd{home.percentChange24hUsd}</div>\n              <div>LastUpdated{home.lastUpdated}</div></>)} />\n        </>\n        )\n      }\n\n\n    </main>\n\n  );\n}\n\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}